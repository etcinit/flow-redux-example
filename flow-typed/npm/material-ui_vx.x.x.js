// flow-typed signature: c5f9cf18ef37d77abbe9401026ccfd67
// flow-typed version: <<STUB>>/material-ui_v^0.16.5/flow_v0.37.4

/**
 * This is an autogenerated libdef stub for:
 *
 *   'material-ui'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare type MuiTheme = Object;

declare module 'material-ui' {
  declare type Origin = {
    vertical: 'top' | 'center' | 'bottom',
    horizontal: 'left' | 'middle' | 'right',
  }

  declare class Checkbox extends React$Component {
    props: {|
      label?: string,
      checked?: boolean,
      onCheck?: (event: Event) => mixed,
    |};
  }
  declare class Divider extends React$Component {
    props: {||};
  }
  declare class Menu extends React$Component {
    props: {|
      onItemTouchTap?: (
        event: SyntheticEvent,
        item: MenuItem,
        index: number
      ) => mixed,
    |};
  }
  declare class MenuItem extends React$Component {
    props: {|
      leftIcon?: React$Element<any>,
      insetChildren?: boolean,
      primaryText?: string,
    |};

    key: string;
  }
  declare class Paper extends React$Component {
    props: {|
      style?: {[key: string]: mixed},
    |};
  }
  declare class Popover extends React$Component {
    props: {|
      anchorEl?: ?EventTarget,
      anchorOrigin?: Origin,
      open?: boolean,
      onRequestClose?: (reason: string) => mixed,
      targetOrigin?: Origin,
    |};
  }
  declare class IconMenu extends React$Component {
    props: {|
      iconButtonElement?: React$Element<any>,
      onItemTouchTap?: (
        event: SyntheticEvent,
        item: MenuItem,
        index: number
      ) => mixed,
      anchorOrigin?: Origin,
      targetOrigin?: Origin,
    |};
  }
  declare class IconButton extends React$Component {
    props: {|
      onTouchTap?: (event: SyntheticEvent) => mixed,
    |};
  }
  declare class TextField extends React$Component {
    props: {|
      value?: string,
      onKeyPress?: (event: SyntheticKeyboardEvent) => mixed,
      onChange?: (event: SyntheticEvent) => mixed,
      onBlur?: (event: SyntheticEvent) => mixed,
      hintText?: string,
      fullWidth?: boolean,
      underlineShow?: boolean,
    |};
  }
}

declare module 'material-ui/styles' {
  declare var colors: { [key: string]: string };

  declare function getMuiTheme(
    muiTheme: MuiTheme,
    ...more: Array<Object>
  ): MuiTheme;

  declare class MuiThemeProvider extends React$Component {
    props: {|
      muiTheme?: MuiTheme,
    |}
  }
}

declare module 'material-ui/svg-icons/action/done' {
  declare class DoneIcon extends React$Component {}

  declare module.exports: typeof DoneIcon;
}

declare module 'material-ui/svg-icons/action/delete' {
  declare class DeleteIcon extends React$Component {}

  declare module.exports: typeof DeleteIcon;
}

